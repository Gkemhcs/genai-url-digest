pipeline {
    agent {
        docker {
            image 'docker:latest'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }

    environment {
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
        DOCKER_IMAGE = 'gkem/urldigest-frontend'
        DOCKER_BUILD_CONTEXT = 'src/frontend' // Specify the directory for Docker build context
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository
                git branch: 'main', url: 'https://github.com/Gkemhcs/genai-url-digest.git'
                sh '''
                        git config --global user.email "gudikotieswarmani@gmail.com"
                        git config --global user.name "Gkemhcs"
                   '''
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using the specified directory as build context
                    sh "docker build -t ${DOCKER_IMAGE}:v${BUILD_NUMBER} ${DOCKER_BUILD_CONTEXT}"
                }
            }
        }
         stage('Push Docker Image') {
            steps {
                script {
                  

                    withDockerRegistry(credentialsId: 'docker-hub-credentials') {
                       
                         sh "docker push ${DOCKER_IMAGE}:v${BUILD_NUMBER}"
                    }
                }
            }
        }


    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "genai-url-digest"
            GIT_USER_NAME = "Gkemhcs"
            DEPLOYMENT_FILE ="k8s/frontend-deployment.yaml"
        }
        steps {
            withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                sh '''
         
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s|image: ${DOCKER_IMAGE}:.*|image: ${DOCKER_IMAGE}:v${BUILD_NUMBER}|" ${DEPLOYMENT_FILE}                                          
                    git add "${DEPLOYMENT_FILE}"
                                            
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    } 

    }

    post {
        always {
           // archiveArtifacts artifacts: 'trivy-report.html', allowEmptyArchive: true
            // Clean up any left over Docker images
            sh 'docker rmi ${DOCKER_IMAGE} || true'
        }
    }
}
